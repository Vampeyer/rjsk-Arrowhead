{
  "name": "eth_sign",
  "summary": "Calculates an Ethereum specific signature",
  "description": "The sign method calculates an Ethereum specific signature with: `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message)))`.\n\nBy adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data (e.g. transaction) and use the signature to impersonate the victim.\n\n**Note** the address to sign with must be unlocked.\n\n",
  "params": [
    {
      "name": "address",
      "required": true,
      "description": "Unlocked address to sign",
      "schema": {
        "$ref": "#/components/schemas/Address"
      }
    },
    {
      "name": "message",
      "required": true,
      "description": "Message to be signed",
      "schema": {
        "$ref": "#/components/schemas/Bytes"
      }
    }
  ],
  "result": {
    "name": "signedMessage",
    "description": "The signed message",
    "schema": {
      "title": "message",
      "type": "string"
    }
  },
  "examples": [
    {
      "name": "messageToSign",
      "params": [
        {
          "name": "address",
          "value": "0x9b2055d370f73ec7d8a03e965129118dc8f5bf83"
        },
        {
          "name": "message",
          "value": "0xdeadbeaf"
        }
      ],
      "result": {
        "name": "signedMessage",
        "value": "0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b"
      }
    }
  ]
}
